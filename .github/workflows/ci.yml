name: CI

on: [pull_request, push]

jobs:
  build_and_test_windows:
    name: Build and test
    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        os: [windows-latest]
        rust: [stable]
        target: [x86_64-pc-windows-msvc, i686-pc-windows-msvc, i686-pc-windows-gnu]

    steps:
    - uses: actions/checkout@master

    - name: Install ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
        profile: minimal
        override: true

    - name: build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}

    - name: run
      uses: actions-rs/cargo@v1
      with:
        command: run
        args: --release --target ${{ matrix.target }} -- --dump-testament

    - name: tests - download
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} -p download

    - name: tests - rustup-init
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --bin rustup-init

    - name: tests - lib
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --lib --all

    - name: tests - doc
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --doc --all

    - name: tests - cli-exact
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test cli-exact

    - name: tests - cli-inst-interactive
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test cli-inst-interactive

    - name: tests - cli-misc
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test cli-misc

    - name: tests - cli-rustup
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test cli-rustup

    - name: tests - cli-self-upd
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test cli-self-upd

    - name: tests - cli-v1
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test cli-v1

    - name: tests - cli-v2
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test cli-v2

    - name: tests - dist_install
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test dist_install

    - name: tests - dist_manifest
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test dist_manifest

    - name: tests - dist
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test dist -- --test-threads 1

    - name: tests - dist_transactions
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --release --target ${{ matrix.target }} --test dist_transactions

  check_fmt:
    name: Checking rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: actions-rs/toolchain@v1
      with:
          toolchain: beta
          components: rustfmt
          override: true
          profile: minimal

    - name: fmt
      run: cargo fmt --all -- --check

  check_clippy:
    name: Checking clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-targets
