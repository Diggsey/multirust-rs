environment:
  matrix:
  #- TARGET: x86_64-pc-windows-msvc
  #- TARGET: i686-pc-windows-msvc
  - TARGET: i686-pc-windows-gnu
    BITS: 32
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/4.9.2/threads-win32/dwarf/i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z/download
    MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z
    MINGW_DIR: mingw32
  - TARGET: x86_64-pc-windows-gnu
    BITS: 64
  access_token:
    secure: q8Wqx0brgfpOYFQqWauvucE2h0o1WYb41a3gKaCKV9QiE4eTz6qLNlqyC3mdsp4Q
branches:
  only:
    - master
    - stable
    - auto

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  - if defined BITS set PATH=C:\msys64\mingw%BITS%\bin;C:\msys64\usr\bin;%PATH%
  - if defined MINGW_ARCHIVE appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - if defined MINGW_ARCHIVE 7z x -y "%MINGW_ARCHIVE%" > nul
  - if defined MINGW_ARCHIVE set PATH=%CD%\%MINGW_DIR%\bin;%PATH%
  - if defined MINGW_ARCHIVE where gcc
  - if defined MINGW_ARCHIVE gcc -v
  - ps: |
      # Install Rust
      Start-FileDownload "https://static.rust-lang.org/dist/rust-nightly-${env:TARGET}.exe" -FileName "rust-nightly.exe"
      .\rust-nightly.exe /VERYSILENT /NORESTART /DIR="C:\rust" | Out-Null
      $env:PATH="$env:PATH;C:\rust\bin"

      # For -gnu builds
      if ($env:TARGET -match "-gnu$") {
        # Remove the mingw gcc to keep it from interfering with the build
        Remove-Item -Recurse -Force "C:\rust\lib\rustlib\$env:TARGET\bin\"
      }

      # Print version info
      rustc -vV
      cargo -vV

build: false

test_script:
  - cargo build  --release
  - cargo test --release -p rustup-dist
  - cargo test --release

notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/9907ad94eb7a5ff291c3

after_test:
  - powershell -File ci/prepare-deploy-appveyor.ps1

artifacts:
  - path: dist\$(TARGET)\rustup-init.exe
    name: rustup-init
  - path: dist\$(TARGET)\rustup-init.exe.sha256
    name: rustup-init-sha
  - path: dist\$(TARGET)\rustup-setup.exe
    name: rustup-setup
  - path: dist\$(TARGET)\rustup-setup.exe.sha256
    name: rustup-setup-sha

deploy:
  - provider: S3
    skip_cleanup: true
    access_key_id: AKIAIZT5ZFS5N2VNRGPA
    secret_access_key:
      secure: viw7GCfVF0QlY0fghoxO3Lux/Wo4u6PxxgUwEq5cs4w69tlv9KzIIw74Nc7KJdgt
    bucket: dev-static-rust-lang-org
    set_public: true
    region: us-west-1
    artifact: rustup-init,rustup-init-sha,rustup-setup,rustup-setup-sha
    folder: rustup
    on:
      branch: master

  - provider: S3
    skip_cleanup: true
    access_key_id: AKIAIZT5ZFS5N2VNRGPA
    secret_access_key:
      secure: viw7GCfVF0QlY0fghoxO3Lux/Wo4u6PxxgUwEq5cs4w69tlv9KzIIw74Nc7KJdgt
    bucket: static-rust-lang-org
    set_public: true
    region: us-west-1
    artifact: rustup-init,rustup-init-sha,rustup-setup,rustup-setup-sha
    folder: rustup
    on:
      branch: stable
