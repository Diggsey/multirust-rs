image: Visual Studio 2017

# branches to build
branches:
  # whitelist
  only:
    - master
    - stable
    - auto
cache:
  - '%USERPROFILE%\.cargo\'
  - target

environment:
  global:
    RUSTFLAGS: -Ctarget-feature=+crt-static
    RUST_BACKTRACE: 1
  matrix:
    - TARGET: x86_64-pc-windows-msvc
      NO_ADD: 1
      ALLOW_PR: 1
    - TARGET: i686-pc-windows-msvc
  access_token:
    secure: q8Wqx0brgfpOYFQqWauvucE2h0o1WYb41a3gKaCKV9QiE4eTz6qLNlqyC3mdsp4Q

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

install:
  # If this is a PR and we're not allowed to test PRs, skip the whole build.
  # Also if we're on the master branch no need to run the full test suite, so
  # just do a smoke test.
  - if defined APPVEYOR_PULL_REQUEST_NUMBER if NOT defined ALLOW_PR appveyor exit
  - if "%APPVEYOR_REPO_BRANCH%" == "master" if NOT defined ALLOW_PR appveyor exit

  # Install rust, x86_64-pc-windows-msvc host
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init.exe -y --default-host=x86_64-pc-windows-msvc
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  - del rustup-init.exe

  # Install the target we're compiling for
  - if NOT defined NO_ADD rustup target add %TARGET%

  # let's see what we got
  - where rustc cargo
  - rustc -vV
  - cargo -V

# Build settings, not to be confused with "before_build" and "after_build".
build: false

build_script:
  - cargo build --release --target %TARGET% --locked
  - cargo run --release --target %TARGET% --locked -- --dump-testament

test_script:
  # The rest of this relies on the set of things to test not changing
  # because I have no idea how to script it.  TODO: Get someone to script it?
  - cargo test --release --target %TARGET% -p download
  - cargo test --release --target %TARGET% --bin rustup-init
  - cargo test --release --target %TARGET% --lib --all
  - cargo test --release --target %TARGET% --doc --all
  - cargo test --release --target %TARGET% --test cli-exact
  - cargo test --release --target %TARGET% --test cli-inst-interactive
  - cargo test --release --target %TARGET% --test cli-misc
  - cargo test --release --target %TARGET% --test cli-rustup
  - cargo test --release --target %TARGET% --test cli-self-upd
  - cargo test --release --target %TARGET% --test cli-v1
  - cargo test --release --target %TARGET% --test cli-v2
  - cargo test --release --target %TARGET% --test dist_install
  - cargo test --release --target %TARGET% --test dist_manifest
  - cargo test --release --target %TARGET% --test dist -- --test-threads 1
  - cargo test --release --target %TARGET% --test dist_transactions

after_test:
  - powershell -File ci/prepare-deploy-appveyor.ps1

artifacts:
  - path: dist\$(TARGET)\rustup-init.exe
    name: rustup-init
  - path: dist\$(TARGET)\rustup-init.exe.sha256
    name: rustup-init-sha
  - path: dist\$(TARGET)\rustup-setup.exe
    name: rustup-setup
  - path: dist\$(TARGET)\rustup-setup.exe.sha256
    name: rustup-setup-sha

deploy:
  - provider: S3
    skip_cleanup: true
    access_key_id: $(AWS_ACCESS_KEY_ID)
    secret_access_key: $(AWS_SECRET_ACCESS_KEY)
    bucket: dev-static-rust-lang-org
    set_public: true
    region: us-west-1
    artifact: rustup-init,rustup-init-sha,rustup-setup,rustup-setup-sha
    folder: rustup
    on:
      branch: stable
